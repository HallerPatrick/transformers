name: Self-hosted runner (push)

on:
  push:
    branches:
      - test_push_ci_temp
  repository_dispatch:

env:
  HF_HOME: /mnt/cache
  TRANSFORMERS_IS_CI: yes
  OMP_NUM_THREADS: 8
  MKL_NUM_THREADS: 8
  PYTEST_TIMEOUT: 60

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout transformers
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Cleanup
        run: |
          rm -rf tests/__pycache__
          rm -rf tests/models/__pycache__
          rm -rf reports

      - name: Fetch the tests to run
        run: |
          pip install --upgrade git-python
          python utils/tests_fetcher.py --diff_with_last_commit
          if [ -f test_list.txt ]; then
            echo $(cat test_list.txt)
          fi

      - id: set-matrix
        name: Identify models to test
        working-directory: tests
        run: |
          to_test=$(python3 -c 'import json; with open("test_list.json") as fp: test_map = json.load(fp); print(test_map.keys())')
          echo $to_test
          echo "::set-output name=matrix::$to_test"

  run_dummy:
    name: Dummy
    strategy:
      matrix:
        folders: ${{ fromJson(needs.setup.outputs.matrix) }}
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout transformers
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Echo folder ${{ matrix.folders }}
        shell: bash
        # For folders like `models/bert`, set an env. var. (`matrix_folders`) to `models_bert`, which will be used to
        # set the artifact folder names (because the character `/` is not allowed).
        run: |
          echo "${{ matrix.folders }}"
          matrix_folders=${{ matrix.folders }}
          echo "$matrix_folders"
          matrix_folders=${matrix_folders/'models/'/'models_'}
          echo "$matrix_folders"
          echo "matrix_folders=$matrix_folders" >> $GITHUB_ENV
